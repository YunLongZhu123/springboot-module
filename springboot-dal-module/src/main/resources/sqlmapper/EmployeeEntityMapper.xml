<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.dao.EmployeeEntityMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.model.EmployeeEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="f_id" jdbcType="INTEGER" property="id" />
    <result column="f_name" jdbcType="CHAR" property="name" />
    <result column="f_address" jdbcType="VARCHAR" property="address" />
    <result column="f_age" jdbcType="INTEGER" property="age" />
    <result column="f_phoneNo" jdbcType="INTEGER" property="phoneno" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    f_id, f_name, f_address, f_age, f_phoneNo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where f_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_employee
    where f_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="f_id" keyProperty="id" parameterType="com.springboot.demo.model.EmployeeEntity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_employee (f_name, f_address, f_age, 
      f_phoneNo)
    values (#{name,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{phoneno,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="f_id" keyProperty="id" parameterType="com.springboot.demo.model.EmployeeEntity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        f_name,
      </if>
      <if test="address != null">
        f_address,
      </if>
      <if test="age != null">
        f_age,
      </if>
      <if test="phoneno != null">
        f_phoneNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneno != null">
        #{phoneno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.demo.model.EmployeeEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_employee
    <set>
      <if test="name != null">
        f_name = #{name,jdbcType=CHAR},
      </if>
      <if test="address != null">
        f_address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        f_age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phoneno != null">
        f_phoneNo = #{phoneno,jdbcType=INTEGER},
      </if>
    </set>
    where f_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.model.EmployeeEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_employee
    set f_name = #{name,jdbcType=CHAR},
      f_address = #{address,jdbcType=VARCHAR},
      f_age = #{age,jdbcType=INTEGER},
      f_phoneNo = #{phoneno,jdbcType=INTEGER}
    where f_id = #{id,jdbcType=INTEGER}
  </update>
</mapper>